/* ListPage.css */

.list-page {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100vh;
  background: #000;
  color: white;
  overflow: hidden;
  position: relative;
}

.dna-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  background: radial-gradient(circle, #ffffff00 10%, #ffffff33 33%, #ffffff55 55%, #ffffff66 66%, #ffffff 100%);
  background-size: 800% 800%;
  animation: dnaAnimation 10s linear infinite;
}

.list-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  padding: 20px;
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(8px);
  transition: transform 0.5s ease-in-out;
  width: 70%; /* Increased width */
}

.list-container.loading {
  transform: translateY(0);
  animation: slideDown 1s forwards;
}

.page-heading {
  font-size: 24px;
  margin: 20px;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top: 4px solid white;
  animation: spin 2s linear infinite;
}

.data-list {
  list-style: none;
  padding: 0;
  margin: 0;
  width: 100%;
}

.list-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 10px;
  padding: 10px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  text-align: center;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.list-item:hover {
  background: rgba(255, 255, 255, 0.2);
}

.name {
  font-size: 18px;
  margin: 0 20px;
}

.percentage {
  margin: 0 20px;
}

.nudge-button {
  background: #007bff;
  color: white;
  border: none;
  padding: 5px 15px;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.3s;
}

.nudge-button:hover {
  background: #0056b3;
}

@keyframes dnaAnimation {
  0% {
    transform: translateY(-10%);
  }
  50% {
    transform: translateY(10%);
  }
  100% {
    transform: translateY(-10%);
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}
